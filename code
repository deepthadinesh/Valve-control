/*
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/75202738-8f46-42d7-a180-a98ec7b6df4d

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudLight led2;
  int servo;
  bool led;
  bool led3;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <Servo.h>

static const int servoPin = 13;
Servo servo1;
int tank = 100;
void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(115200);
  servo1.attach(servoPin);
  pinMode(12, OUTPUT);

  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
  */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here
  if (tank == 0) {
    Serial.println("tank is empty");
  }

  else {
    if (servo == 0) {
      Serial.println("tap closed");
    }
    else if (servo <= 45 && servo >= 1) {      // tell servo to go to position in variable 'pos'
      //digitalWrite(2, HIGH);           // considering led connected to pin 2
      delay(2000);                       // waits 1000ms for the servo to reach the position
      tank -= 1;                    // tap half open
      Serial.println("water left");
      Serial.println(tank);
    }


    else {            // tell servo to go to position in variable 'pos'
      //digitalWrite(2, HIGH);
      delay(2000);                       // waits 1000ms for the servo to reach the position
      tank -= 5;                        //tap fully open
      Serial.println("water left");
      Serial.println(tank);
    }


    /*else (myservo.write(0)); {             //tap closed
      digitalwrite(2, LOW);
      delay(1000);*/
  }


}


/*
  Since Servo is READ_WRITE variable, onServoChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onServoChange()  {
  servo1.write(servo);
  Serial.println(servo);
  delay(2000);
  //tank open
  if (servo == 0) {
    digitalWrite(12, LOW); led = false;
    digitalWrite(26, HIGH);
    led3 = true;


  }
  else {
    digitalWrite(12, HIGH);
    led = true;
    if (tank == 0)
    {
      digitalWrite(26, LOW);
      led3 = false;
    }
    else
    { digitalWrite(26, HIGH);
      led3 = true;
    }
  }
  // Add your code here to act upon Servo change
}





/*
  Since Led is READ_WRITE variable, onLedChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLedChange()  {
  // Add your code here to act upon Led change
  if (servo == 0) {
    led = true;
  }
  else {
    led = false;
  }
}

/*
  Since Led2 is READ_WRITE variable, onLed2Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLed2Change()  {
  // Add your code here to act upon Led2 change
  if (servo == 0) {
    led2 = true;
  }
  else {
    led2 = false;
  }
}


/*
  Since Led3 is READ_WRITE variable, onLed3Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLed3Change()  {
  // Add your code here to act upon Led3 change
  if (tank == 0) {
    led3 = false;
  }
  else {
    led3 = true;
  }
}



